name:
  Dart
on:
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened, ready_for_review] # To trigger jobs when draft is made to non-draft
jobs:
  dart-format:
    name: 'Quality Gate :: Dart format validation [OS: ${{ matrix.os }}, SDK: ${{ matrix.sdk }}]'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        sdk: [ 3.2.4 ]
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.sdk }}
      - run: dart --version
      - run: dart format --output=none --set-exit-if-changed .
  dart-analyze:
    name: 'Quality Gate :: Static code analysis [OS: ${{ matrix.os }}, Flutter: ${{ matrix.flutter-version }}]'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        flutter-version: [
          3.16.7 #  brings Dart version: 3.2.4
        ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}
          #channel: 'stable'
      - run: flutter --version
      - run: flutter analyze --no-fatal-infos # won't fail for INFO level result, but will for warning and error
  dart-unit-test:
    name: 'Quality Gate :: Unit test [OS: ${{ matrix.os }}, Flutter: ${{ matrix.flutter-version }}]'
    needs: [
      dart-format,
      dart-analyze
    ]
    if: ${{ always() && !cancelled() && !contains(needs.*.result, 'failure') && !github.event.pull_request.draft }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        flutter-version: [
          3.16.7 # brings Dart version: 3.2.4
        ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}
          channel: 'stable'
      - run: flutter test -r expanded --coverage
  pr_commented:
    name: test for PR comment
    if: ${{ github.event.pull_request && contains(github.event.pull_request.comments.body, '/test') }}
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo Found comment!

# temporarily disabled until figuring out the org.
#      - uses: codecov/codecov-action@v1
#        with:
#          file: ./coverage/lcov.info